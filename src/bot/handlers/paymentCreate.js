const crypto = require('crypto');

const merchantLogin = process.env.ROBOKASSA_MERCHANT_LOGIN;
const password1 = process.env.ROBOKASSA_PASSWORD_1;

module.exports = async (bot, query) => {
  const chatId = query.message.chat.id;
  let amount;
  let description;

  if (query.data === 'plan_1m') {
    amount = 149;
    description = '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü';
  } else if (query.data === 'plan_1y') {
    amount = 1490;
    description = '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –≥–æ–¥';
  } else {
    bot.sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω.');
    return;
  }

  // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID –ø–ª–∞—Ç–µ–∂–∞ (–ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ –ë–î)
  const invId = Math.floor(Math.random() * 1000000);

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏
  const signatureString = `${merchantLogin}:${amount}:${invId}:${password1}`;
  const signature = crypto.createHash('md5').update(signatureString).digest('hex');

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
  const paymentLink = `https://auth.robokassa.ru/Merchant/Index.aspx?MerchantLogin=${merchantLogin}&OutSum=${amount}&InvId=${invId}&Description=${encodeURIComponent(description)}&SignatureValue=${signature}`;

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url: paymentLink }]
      ]
    }
  };

  await bot.sendMessage(chatId, `‚úÖ –í–∞—à —Ç–∞—Ä–∏—Ñ: <b>${description}</b>\nüíµ –°—É–º–º–∞: <b>${amount} ‚ÇΩ</b>\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:`, {
    parse_mode: 'HTML',
    reply_markup: options.reply_markup
  });
};
