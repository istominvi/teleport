module.exports = (bot, msg) => {
    const chatId = msg.chat.id;

//     const { chat_id, username } = msg.from;
// const subscription_type = 'basic';

// User.create({ chat_id, username, subscription_type })
//   .then(() => {
//     bot.sendMessage(chat_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
//   })
//   .catch((error) => {
//     console.error('Error creating user:', error);
//   });
  
    const welcomeText = `
  üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Teleport!
  
  üöÄ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.
  
  üõ°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è.
  
  –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:
    `;
  
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data: "subscriptions" }]
        ]
      }
    };
  
    bot.sendMessage(chatId, welcomeText, options);
  };